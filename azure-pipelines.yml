# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master
stages:
- stage: BuildAndDeploy
  displayName: Build and Deploy
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - script: npm install
      displayName: 'npm install, build and test'
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
  - deployment: Deploy
    displayName: Deploy
    dependsOn: Build
    condition: succeeded()   
    pool:
      vmImage: ubuntu-latest 
    environment: ReactBankApiEnv
    strategy:
      runOnce:    #rolling, canary are the other strategies that are supported
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'Pay-As-You-Go (0f5ce1a3-5d3c-463e-b9a8-d4743768aa5c)'
              appType: 'webAppLinux'
              WebAppName: 'ReactBankAppAPI'
              packageForLinux: '$(Pipeline.Workspace)/$(Build.BuildId).zip'
              RuntimeStack: 'NODE|14-lts'
- stage: Testing
  displayName: Testing
  dependsOn: BuildAndDeploy
  condition: succeeded()
  pool:
    vmImage: windows-latest
  jobs:
  - job: UITesting
    displayName: UI Testing with Tosca
    workspace:
      clean: all
    steps:
    - task: CmdLine@2
      displayName: 'Run Tosca CI'
      inputs:
        script: '$(Agent.HomeDirectory)\\Client\\ToscaCIClient.exe -m distributed -c C:\\Users\\KST\\Documents\\agent\\Client\\CITestExecutionConfiguration.xml -t junit -r $(Common.TestResultsDirectory)\\ToscaCI.xml'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: JUnit
        testResultsFiles: '**/ToscaCI*.xml'
        searchFolder: '$(Common.TestResultsDirectory)'
        failTaskOnFailedTests: true
        testRunTitle: 'Publish ToscaCI Test Results'
